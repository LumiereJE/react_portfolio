{"version":3,"file":"static/js/798.c27d7d5a.chunk.js","mappings":"qPAGA,MAcA,EAdqBA,IAAwB,IAAvB,cAAEC,GAAeD,EACrC,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,eACxBH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxBH,EAAcQ,KAAI,CAACC,EAAMC,KACxBN,EAAAA,EAAAA,KAAA,KAAAD,SAAcM,EAAKE,SAAXD,SAGR,ECbGV,EAAgB,CAC3B,CACEW,QACE,ioBAEJ,CACEA,QACE,gyCAEJ,CACEA,QACE,+1BAEJ,CACEA,QACE,21CAEJ,CACEA,QACE,4nECDN,EAXgBC,KAEZX,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACC,MAAM,mBAAmBC,YAAY,WAAUZ,SAAA,EACnDC,EAAAA,EAAAA,KAAA,WAASY,GAAG,QAAOb,UACjBC,EAAAA,EAAAA,KAACa,EAAY,CAACjB,cAAeA,OAE/BI,EAAAA,EAAAA,KAACc,EAAAA,EAAY,M,+DCTnB,MAAMC,EAAYC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2E5B,EArCqBH,KACnB,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAuBvC,OAdAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACfC,OAAOC,QAAU,IACnBL,GAAW,GAEXA,GAAW,EACb,EAGF,OADAI,OAAOE,iBAAiB,SAAUH,GAC3B,KACLC,OAAOE,iBAAiB,SAAUH,EAAa,CAChD,GACA,KAGDtB,EAAAA,EAAAA,KAACe,EAAS,CAAAhB,SACPmB,IACClB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAA,UAAQ0B,QAzBEC,KAChBJ,OAAOK,OAAO,CACZC,IAAK,EACLC,SAAU,UACV,EAqBgCC,KAAK,SAAQhC,SAAC,WAKpC,C","sources":["components/contents/about_contents/AboutDetails.jsx","data/about.js","pages/AboutMe.jsx","utils/ScrollTopBtn.jsx"],"sourcesContent":["import React from \"react\";\r\nimport aboutImg from \"../../../assets/img/aboutMeImg.jpg\";\r\n\r\nconst AboutDetails = ({ about_me_data }) => {\r\n  return (\r\n    <div className=\"about_box\">\r\n      <h2>About me</h2>\r\n      <img src={aboutImg} alt=\"about_img\" />\r\n      <div className=\"detail_box\">\r\n        {about_me_data.map((data, key) => (\r\n          <p key={key}>{data.details}</p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutDetails;\r\n","export const about_me_data = [\r\n  {\r\n    details:\r\n      \"패션업계에서 가장 힘들게 했던 것은 사고가 나면 수습하는 과정에서 다른 사람의 손을 빌릴 수 밖에 없다는 점이었습니다. 수습을 거친 옷들은 특성상 완벽히 정상품이 될 수도 없기에 저는 의뢰를 할 수밖에 없는 시스템에도 마음이 편하지 않았습니다. \",\r\n  },\r\n  {\r\n    details:\r\n      \"개발자라는 직업이 정확히 어떤일을 하는지는 알기 전이었음에도 적어도 수습을 내가 할 수 있다는 점에서 도전해보고 싶어졌습니다. 실력을 쌓기 전까지는 힘든 길일 수 있겠지만 오히려 저에게 맞는 길이 될수도 있다는 생각이 컸습니다. 첫 도전으로 웹디자이너 라는 직업을 알게 되면서 국비과정을 수강하였으나 저에게 자바스크립트는 큰 벽과도 같이 느껴져서 구직이 망설여졌습니다. 하지만 추가적인 교육과정에서 Front, Back 모두 작업해 볼 기회를 거치며 이해도가 크게 상승해 자신감과 재미를 느끼게 되었습니다.\",\r\n  },\r\n  {\r\n    details:\r\n      \"Back - 입문으로 파이썬을 배울때는 간단한 수식부터 시작했기에 어떻게 활용되는지 모르겠어서 혼란스러웠는데, 본 프로젝트에서 스프링부트를 이용한 자바로 Back을 만들 때 어느정도 틀이 있는 문법과 해석이 가능해지면서 흥미가 생겼습니다. 테스트를 통해 data가 CRUD되는 과정을 경험함으로써 back의 역할이나 DB에 대한 이해가 크게 와닿았습니다. \",\r\n  },\r\n  {\r\n    details:\r\n      \"front - 리액트를 다루는데에 있어 자바스크립트가 중요하다는 말에 겁부터 먹기도 했고, 처음에 잘 못 이해한 부분이 있어서 어려움을 겪다가 마지막 프로젝트가 되어서야 리액트의 운용방식을 이해하게 되었습니다. 마치 자바스크립트를 처음 배웠을 때 처럼 제 안에서 리액트가 정돈되지 않은 것을 느껴 구직에 자신이 없었고, 지인에게 리액트 강좌를 추천받아서 처음부터 끝까지 혼자 리액트를 작성해보니 이전보다 훨씬 안정적이고 제대로 운용할 수 있게 되었습니다. 비록 hook 관련해서 미흡할 수 있으나, 열심히 따라가도록 노력하겠습니다.\",\r\n  },\r\n  {\r\n    details:\r\n      \"Teamwork - 팀워크에서 가장 중요한것은 원활한 의사소통과 스케줄 관리 및 공유라고 생각합니다. 여러 조별과제를 거치며 일정관리 부분에 아쉬움이 남아 마지막 큰 프로젝트에는 모든 팀원이 각자 담당하는 페이지와 일정을 확인하기 위해 하나의 스케줄러를 공유하게 되었습니다. 각자 맡은 파트별로 예상되는 일정을 기록하고 이행한 뒤, 하루 일정이 끝날 무렵에 진행되는 일일 회의에서 변동사항을 말하고, 성과를 보고하는 형식으로 진행되었습니다. 처음 시도할 때는 할 일과 기간을 일일히 적는것이 꽤 오랜시간이 걸렸기에 의미가 있을까 싶었지만, 하루 루틴에 넣고 프로젝트가 깊이 진행될 수록 스케줄러의 필요성을 깨닫게 되었습니다. 일정이 늘어지지 않고 시간안에 끝내지 못할 것 같으면 도움도 주고 받으며 서로가 서로의 영역을 침범하지 않되, 뒤에서 도움을 주는 등의 원활한 팀워크로 예상 날짜보다 일찍이 프로젝트를 마쳤던 경험이 있습니다. \",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Main from \"../components/section/Main\";\r\nimport ScrollTopBtn from \"../utils/ScrollTopBtn\";\r\n\r\nimport AboutDetails from \"../components/contents/about_contents/AboutDetails\";\r\nimport { about_me_data } from \"../data/about\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <Main title=\"Jieun's about me\" discription=\"About me\">\r\n      <section id=\"about\">\r\n        <AboutDetails about_me_data={about_me_data} />\r\n      </section>\r\n      <ScrollTopBtn />\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styledbtn = styled.div`\r\n  .top_btn {\r\n    position: fixed;\r\n    bottom: 5%;\r\n    right: 5%;\r\n    z-index: 999;\r\n    button {\r\n      width: 60px;\r\n      height: 60px;\r\n      color: #fff;\r\n      background-color: #555;\r\n      padding: 12px;\r\n      cursor: pointer;\r\n      border: 1px solid #555;\r\n      border-radius: 50%;\r\n      transition: all 0.3s ease;\r\n      &:hover {\r\n        color: #555;\r\n        background-color: #fff;\r\n      }\r\n    }\r\n    @media (max-width: 1023px) {\r\n      bottom: 4%;\r\n      right: 6%;\r\n    }\r\n    @media (max-width: 767px) {\r\n      width: 30px;\r\n      height: 30px;\r\n\r\n      bottom: 8%;\r\n      right: 14%;\r\n      button {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScrollTopBtn = () => {\r\n  const [showBtn, setShowBtn] = useState(false);\r\n\r\n  const ScrollTop = () => {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ShowBtnClick = () => {\r\n      if (window.scrollY > 800) {\r\n        setShowBtn(true);\r\n      } else {\r\n        setShowBtn(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", ShowBtnClick);\r\n    return () => {\r\n      window.addEventListener(\"scroll\", ShowBtnClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Styledbtn>\r\n      {showBtn && (\r\n        <div className=\"top_btn\">\r\n          <button onClick={ScrollTop} type=\"button\">\r\n            Top\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Styledbtn>\r\n  );\r\n};\r\n\r\nexport default ScrollTopBtn;\r\n"],"names":["_ref","about_me_data","_jsxs","className","children","_jsx","src","aboutImg","alt","map","data","key","details","AboutMe","Main","title","discription","id","AboutDetails","ScrollTopBtn","Styledbtn","styled","div","showBtn","setShowBtn","useState","useEffect","ShowBtnClick","window","scrollY","addEventListener","onClick","ScrollTop","scroll","top","behavior","type"],"sourceRoot":""}